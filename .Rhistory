FinalData=clothingSum[,[5,6,4]]
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[with(clothingSum,order(tOut))]
View(clothingSum)
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,4])
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,4])]
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,4])]
# POINT A.5
# make model prediction and plot for model_final
final=order(clothingSum[,4])
final
clothingSum[with(clothingSum,order(tOut))]
clothingSum[final]
clothingSum[final,:]
clothingSum[final,]
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,4]),]
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = final, weights = 1/v)
summary(model_final)
anova(model_final)
par(mfrow=c(2,2))
plot(model_final)
## PREDICTION PLOTS -> make it work :)
pred <- predict(model_final,type="response",interval = "confidence")
par(mfrow=c(1,1))
plot(pred[,1])
lines(pred[,2],col=2)
lines(pred[,3],col=2)
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,4],clothingSum[,6]),]
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = final, weights = 1/v)
## PREDICTION PLOTS -> make it work :)
pred <- predict(model_final,type="response",interval = "confidence")
par(mfrow=c(1,1))
plot(pred[,1])
lines(pred[,2],col=2)
lines(pred[,3],col=2)
View(pred)
View(final)
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,4],clothingSum[,7]),]
View(final)
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,6],clothingSum[,4]),]
View(final)
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = final, weights = 1/v)
## PREDICTION PLOTS -> make it work :)
pred <- predict(model_final,type="response",interval = "confidence")
par(mfrow=c(1,1))
plot(pred[,1])
lines(pred[,2],col=2)
lines(pred[,3],col=2)
View(final)
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
summary(model_final)
## PREDICTION PLOTS -> make it work :)
pred <- predict(model_final,type="response",interval = "confidence")
par(mfrow=c(1,1))
plot(pred[,1])
lines(pred[,2],col=2)
lines(pred[,3],col=2)
plot(pred[,1])
points(clothingSum$clo)
points(clothingSum$clo,col=3)
points(clothingSum$clo,col=2)
plot((clothingSum$clo-pred[,1])^2)
plot((clothingSum$clo-pred[,1]))
#matt
clothingFull<-read.csv('clothingFull.csv')
## PREDICTION PLOTS -> make it work :)
pred <- predict(model_final,type="response",interval = "confidence",newdata=clothingFull)
plot(pred[,1])
plot((clothingSFull$clo-pred[,1]))
plot((clothingFull$clo-pred[,1]))
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/v)
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
len(clothingFull)
length(clothingFull)
length(clothingFull,2)
length(clothingFull$X)
dataFemFull <- clothingFull[1,1:7]
dataMaleFull <- clothingFull[1,1:7]
#make a female and male data set
for(i in 1:length(clothingFull$isFemale)){
if (clothingFull$isFemale[i] == 1){
dataFem <- rbind(dataFem,clothingFull[i,1:7])
}
else{
dataMale <- rbind(dataMale,clothingFull[i,1:7])
}
}
View(clothingFull)
#make a female and male data set
for(i in 1:length(clothingFull$isFemale)){
if (clothingFull$sex[i] == 'female'){
dataFem <- rbind(dataFem,clothingFull[i,1:7])
}
else{
dataMale <- rbind(dataMale,clothingFull[i,1:7])
}
}
View(clothingFull)
as.numeric (clothingSum$sex)
View(clothingSum)
View(clothingSum)
#make a female and male data set
for(i in 1:length(clothingFull$isFemale)){
if (as.numeric(clothingFull$sex[i]) == 1){
dataFem <- rbind(dataFem,clothingFull[i,1:7])
}
else{
dataMale <- rbind(dataMale,clothingFull[i,1:7])
}
}
as.numeric(clothingFull$sex)
View(clothingFull)
as.numeric(clothingFull$sex)
as.numeric(as.factor(clothingFull$sex))
#make a female and male data set
for(i in 1:length(clothingFull$isFemale)){
if (as.numeric(as.factor(clothingFull$sex[i])) == 1){
dataFem <- rbind(dataFem,clothingFull[i,1:7])
}
else{
dataMale <- rbind(dataMale,clothingFull[i,1:7])
}
}
dataFemFull <- clothingFull[1,1:7]
dataMaleFull <- clothingFull[1,1:7]
#make a female and male data set
for(i in 1:length(clothingFull$isFemale)){
if (as.numeric(as.factor(clothingFull$sex[i])) == 1){
dataFem <- rbind(dataFemFull,clothingFull[i,1:7])
}
else{
dataMale <- rbind(dataMaleFull,clothingFull[i,1:7])
}
}
#make a female and male data set
for(i in 1:length(clothingFull$X){
#make a female and male data set
for(i in 1:length(clothingFull$X)){
if (as.numeric(as.factor(clothingFull$sex[i])) == 1){
dataFem <- rbind(dataFemFull,clothingFull[i,1:7])
}
else{
dataMale <- rbind(dataMaleFull,clothingFull[i,1:7])
}
}
dataFemFull <- clothingFull[1,1:7]
dataMaleFull <- clothingFull[1,1:7]
#make a female and male data set
for(i in 1:length(clothingFull$X)){
if (as.numeric(as.factor(clothingFull$sex[i])) == 1){
dataFemFull <- rbind(dataFemFull,clothingFull[i,1:7])
}
else{
dataMaleFull <- rbind(dataMaleFull,clothingFull[i,1:7])
}
}
View(dataMale)
View(dataFemFull)
#make a female and male data set
for(i in 1:length(clothingFull$X)){
if (clothingFull$sex[i] == 'female'){
dataFemFull <- rbind(dataFemFull,clothingFull[i,1:7])
}
else{
dataMaleFull <- rbind(dataMaleFull,clothingFull[i,1:7])
}
}
dataFemFull <- clothingFull[1,1:7]
dataMaleFull <- clothingFull[1,1:7]
#make a female and male data set
for(i in 1:length(clothingFull$X)){
if (clothingFull$sex[i] == 'female'){
dataFemFull <- rbind(dataFemFull,clothingFull[i,1:7])
}
else{
dataMaleFull <- rbind(dataMaleFull,clothingFull[i,1:7])
}
}
varMale <- var(dataMale$clo)
varMaleFull <- var(dataMaleFull$clo)
varFemFull <- var(dataFemFull$clo)
n <- len(clothingFull$X)
n <- length(clothingFull$X)
n <- length(clothingFull$X)
vFull <- rep(0,n)
for(i in 1:n){
if (clothingFull$isFemale[i] == 0){
vFull[i] = varMale
}
else {
vFull[i] = varFem
}
}
n <- length(clothingFull$X)
vFull <- rep(0,n)
for(i in 1:n){
if (clothingFull$sex == 'male'){
vFull[i] = varMale
}
else {
vFull[i] = varFem
}
}
warnings()
vfull
vFull
for(i in 1:n){
if (clothingFull$sex[i] == 'male'){
vFull[i] = varMale
}
else {
vFull[i] = varFem
}
}
vFull
# add weights to the model
model_fulldata <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
plot(model_fulldata$residuals)
summary(model_fulldata)
summary(model_fulldata)
anova(model_fulldata)
par(mfrow=c(2,2))
plot(model_fulldata)
# add weights to the model
model_fulldata <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingFull)#, weights = 1/vFull)
summary(model_fulldata)
anova(model_fulldata)
par(mfrow=c(2,2))
plot(model_fulldata)
# add weights to the model
model_fulldata <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
# add weights to the model
model_fulldata <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
plot(model_fulldata$residuals)
summary(model_fulldata)
anova(model_fulldata)
par(mfrow=c(2,2))
plot(model_fulldata)
# add weights to the model
model_fulldata <- lm(ln(clo) ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
# add weights to the model
model_fulldata <- lm(log(clo) ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
plot(model_fulldata$residuals)
summary(model_fulldata)
anova(model_fulldata)
par(mfrow=c(2,2))
plot(model_fulldata)
# add weights to the model
model_fulldata <- lm((clo) ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
par(mfrow=c(3,2))
plot(model_fulldata)
par(mfrow=c(2,3))
plot(model_fulldata)
par(mfrow=c(2,2))
plot(model_fulldata)
View(clothingFull)
View(clothingSum)
View(clothingFull)
View(clothingSum)
View(clothingFull)
View(clothingFull)
View(clothingFull)
View(clothingFull)
View(clothingFull)
View(clothingFull)
View(clothingFull)
View(clothingSum)
View(clothingFull)
View(clothingSum)
View(clothingFull)
View(clothingFull)
View(clothingFull)
#FULL DATASET
#C.1
clothingFull<-read.csv('clothingFull.csv')
clothingFull=clothingFull[order(clothingFull[,5],clothingFull[3]),]
dataFemFull <- clothingFull[1,1:7]
dataMaleFull <- clothingFull[1,1:7]
#make a female and male data set
for(i in 1:length(clothingFull$X)){
if (clothingFull$sex[i] == 'female'){
dataFemFull <- rbind(dataFemFull,clothingFull[i,1:7])
}
else{
dataMaleFull <- rbind(dataMaleFull,clothingFull[i,1:7])
}
}
varMaleFull <- var(dataMaleFull$clo)
varFemFull <- var(dataFemFull$clo)
n <- length(clothingFull$X)
vFull <- rep(0,n)
for(i in 1:n){
if (clothingFull$sex[i] == 'male'){
vFull[i] = varMale
}
else {
vFull[i] = varFem
}
}
# add weights to the model
model_fulldata <- lm((clo) ~ tInOp*sex+I(tOut^2), data = clothingFull, weights = 1/vFull)
plot(model_fulldata$residuals)
summary(model_fulldata)
anova(model_fulldata)
par(mfrow=c(2,2))
plot(model_fulldata)
plot(model_fulldata$residuals)
View(clothingFull)
## PREDICTION PLOTS -> make it work :)
pred <- predict(model_final,type="response",interval = "confidence",newdata=clothingSum)
par(mfrow=c(1,1))
plot(pred[,1])
points(clothingSum$clo,col=2)
plot((clothingFull$clo-pred[,1]))
# POINT A.5
# make model prediction and plot for model_final
final=clothingSum[order(clothingSum[,6],clothingSum[,4]),]
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
par(mfrow=c(1,1))
plot(pred[,1])
points(clothingSum$clo,col=2)
plot((clothingFull$clo-pred[,1]))
lines(pred[,2],col=2)
model_final$
logLik(model_final)
logLik(model_final)
# find the variances for clo for the sexes
# this is used as weights in v for the model
varMale <- var(dataMale$clo)
varFem <- var(dataFem$clo)
n <- 136
v <- rep(0,n)
for(i in 1:n){
if (clothingSum$isFemale[i] == 0){
v[i] = varMale
}
else {
v[i] = varFem
}
}
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
summary(model_final)
Function<-function(v){
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
logLik(model_final)
}
help(diag)
optim(diag(1,length(clothingSum$subjId)))
help(optim)
optim(diag(1,length(clothingSum$subjId)),Function)
clothingSum <- read.csv('clothingSum.csv')
Function<-function(v){
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
logLik(model_final)
}
optim(diag(1,length(clothingSum$subjId)),Function)
Function<-function(v){
n <- length(clothingSum$subjId)
for(i in 1:n){
if (clothingSum$isFemale[i] == 0){
v[i] = varMale
}
else {
v[i] = varFem
}
}
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
logLik(model_final)
}
optim(rep(0,n),Function)
clothingSum <- read.csv('clothingSum.csv')
# make sex binary variable
clothingSum$sex <- as.factor (clothingSum$sex)
clothingSum$day <- as.factor(clothingSum$day)
clothingSum$isFemale <- as.numeric (clothingSum$sex)
for(i in 1:length(clothingSum$isFemale)){
if (clothingSum$isFemale[i] == 2){
clothingSum$isFemale[i] = 0
}
}
dataFem <- clothingSum[1,1:7]
dataMale <- clothingSum[1,1:7]
#make a female and male data set
for(i in 1:length(clothingSum$isFemale)){
if (clothingSum$isFemale[i] == 1){
dataFem <- rbind(dataFem,clothingSum[i,1:7])
}
else{
dataMale <- rbind(dataMale,clothingSum[i,1:7])
}
}
Function<-function(v){
n <- length(clothingSum$subjId)
for(i in 1:n){
if (clothingSum$isFemale[i] == 0){
v[i] = varMale
}
else {
v[i] = varFem
}
}
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
logLik(model_final)
}
optim(rep(0,n),Function)
n<-length(clothingSum$subjId)
Function<-function(v){
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
logLik(model_final)
}
optim(rep(0,n),Function)
optim(rep(1,n),Function)
-logLik(model_final)
Function<-function(v){
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
-logLik(model_final)
}
optim(rep(1,n),Function)
1/varMale
1/varFemale
1/varFem
Function<-function(v){
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
print("yo")
-logLik(model_final)
}
optim(rep(1,n),Function)
new=optim(rep(1,n),Function)
Function<-function(v){
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
-logLik(model_final)
}
new=optim(rep(1,n),Function)
View(new)
print(model_final)
plot(model_final)
par(mfrow=c(2,2))
plot(model_final)
# find the variances for clo for the sexes
# this is used as weights in v for the model
varMale <- var(dataMale$clo)
varFem <- var(dataFem$clo)
n <- 136
v <- rep(0,n)
for(i in 1:n){
if (clothingSum$isFemale[i] == 0){
v[i] = varMale
}
else {
v[i] = varFem
}
}
new=optim(v,Function)
View(new)
par(mfrow=c(2,2))
plot(model_final)
model_optimized <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/new$par)
plot(model_optimized)
# add weights to the model
model_final <- lm(clo ~ tInOp*sex+I(tOut^2), data = clothingSum, weights = 1/v)
summary(model_final)
anova(model_final)
par(mfrow=c(2,2))
plot(model_final)
plot(model_final)
plot(model_optimized)
plot(model_final)
plot(model_optimized)
View(new)
new[["par"]]
View(new)
View(clothingFull)
View(clothingFull)
newdata=data.table(tInOp=rep(27,50),tOut=seq(15,25,0.25),sex=rep('female',50))
View(clothingFull)
data.table(sex=1)
data.frame(sex=1)
newdata=data.frame(tInOp=rep(27,50),tOut=seq(15,25,0.25),sex=rep('female',50))
seq(15,25,0.25)
seq(15,25,0.2)
newdata=data.frame(tInOp=rep(27,50),tOut=seq(15,25,0.2),sex=rep('female',50))
newdata=data.frame(tInOp=rep(27,50),tOut=seq(15.2,25,0.2),sex=rep('female',50))
plot(model_final)
plot(model_optimized)
plot(model_final)
plot(model_optimized)
getAnywhere(logLik)
stats:::logLik()
stats:::logLik
